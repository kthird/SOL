<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="connections_8h" kind="file" language="C++">
    <compoundname>connections.h</compoundname>
    <includes refid="message_8h" local="no">message.h</includes>
    <includedby refid="client_8c" local="no">client.c</includedby>
    <incdepgraph>
      <node id="63">
        <label>assert.h</label>
      </node>
      <node id="62">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>connections.h</label>
        <link refid="connections.h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>ops.h</label>
        <link refid="ops_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="66">
        <label>client.c</label>
        <link refid="client_8c"/>
      </node>
      <node id="65">
        <label>connections.h</label>
        <link refid="connections.h"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="connections_8h_1aecf13b8dc783db2202ca5c34fe117fc3" prot="public" static="no">
        <name>MAX_RETRIES</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="11" column="9" bodyfile="connections.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="connections_8h_1a763a071b50fb9cf7997861d0f5266387" prot="public" static="no">
        <name>MAX_SLEEPING</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="12" column="9" bodyfile="connections.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="connections_8h_1a7baab2aa5bf8eb14b6128e0f16634837" prot="public" static="no">
        <name>UNIX_PATH_MAX</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="14" column="9" bodyfile="connections.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="connections_8h_1a93ad31c416b2e2055827e5f684e89daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int openConnection</definition>
        <argsstring>(char *path, unsigned int ntimes, unsigned int secs)</argsstring>
        <name>openConnection</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>ntimes</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>secs</declname>
        </param>
        <briefdescription>
<para>Apre una connessione AF_UNIX verso il server membox. </para>        </briefdescription>
        <detaileddescription>
<para>openConnection <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path del socket AF_UNIX </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ntimes</parametername>
</parameternamelist>
<parameterdescription>
<para>numero massimo di tentativi di retry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secs</parametername>
</parameternamelist>
<parameterdescription>
<para>tempo di attesa tra due retry consecutive</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>il descrittore associato alla connessione in caso di successo -1 in caso di errore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="connections_8h_1a166a9f07b57f9684fc9e97863d97ff03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readHeader</definition>
        <argsstring>(long fd, message_hdr_t *hdr)</argsstring>
        <name>readHeader</name>
        <param>
          <type>long</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structmessage__hdr__t" kindref="compound">message_hdr_t</ref> *</type>
          <declname>hdr</declname>
        </param>
        <briefdescription>
<para>Legge l&apos;header del messaggio. </para>        </briefdescription>
        <detaileddescription>
<para>readHeader <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>descrittore della connessione </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hdr</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore all&apos;header del messaggio da ricevere</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in caso di successo -1 in caso di errore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="connections_8h_1acf5cb8379636265d11a008d6aa94dc30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readData</definition>
        <argsstring>(long fd, message_data_t *data)</argsstring>
        <name>readData</name>
        <param>
          <type>long</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structmessage__data__t" kindref="compound">message_data_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Legge il body del messaggio. </para>        </briefdescription>
        <detaileddescription>
<para>readData <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>descrittore della connessione </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore al body del messaggio</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in caso di successo -1 in caso di errore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="connections_8h_1a3c23eb25de2ae8b5216eb6dd847521c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sendRequest</definition>
        <argsstring>(long fd, message_t *msg)</argsstring>
        <name>sendRequest</name>
        <param>
          <type>long</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structmessage__t" kindref="compound">message_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Invia un messaggio di richiesta al server membox. </para>        </briefdescription>
        <detaileddescription>
<para>sendRequest <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>descrittore della connessione </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore al messaggio da inviare</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in caso di successo -1 in caso di errore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="connections_8h_1a9caa249e483ccf12bf8a2e6830a50a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readReply</definition>
        <argsstring>(long fd, message_t *msg)</argsstring>
        <name>readReply</name>
        <param>
          <type>long</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structmessage__t" kindref="compound">message_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Legge un messaggio di risposta dal server membox. </para>        </briefdescription>
        <detaileddescription>
<para>readReply <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>descrittore della connessione </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore al messaggio da ricevere</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in caso di successo -1 in caso di errore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="connections.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>membox<sp/>Progetto<sp/>del<sp/>corso<sp/>di<sp/>LSO<sp/>2016<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Dipartimento<sp/>di<sp/>Informatica<sp/>Università<sp/>di<sp/>Pisa</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Docenti:<sp/>Pelagatti,<sp/>Torquati</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONNECTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONNECTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_RETRIES<sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SLEEPING<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(UNIX_PATH_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIX_PATH_MAX<sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="message_8h" kindref="compound">message.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>openConnection(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntimes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secs);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------<sp/>server<sp/>side<sp/>-----<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readHeader(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structmessage__hdr__t" kindref="compound">message_hdr_t</ref><sp/>*hdr);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readData(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structmessage__data__t" kindref="compound">message_data_t</ref><sp/>*<ref refid="structdata" kindref="compound">data</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>da<sp/>completare<sp/>da<sp/>parte<sp/>dello<sp/>studente<sp/>con<sp/>altri<sp/>metodi<sp/>di<sp/>interfaccia<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------<sp/>client<sp/>side<sp/>------</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sendRequest(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structmessage__t" kindref="compound">message_t</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readReply(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structmessage__t" kindref="compound">message_t</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONNECTIONS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="connections.h"/>
  </compounddef>
</doxygen>
