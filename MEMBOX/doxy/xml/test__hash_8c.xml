<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__hash_8c" kind="file" language="C++">
    <compoundname>test_hash.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="icl__hash_8h" local="no">icl_hash.h</includes>
    <incdepgraph>
      <node id="110">
        <label>stdlib.h</label>
      </node>
      <node id="109">
        <label>test_hash.c</label>
        <link refid="test_hash.c"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>icl_hash.h</label>
        <link refid="icl__hash_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__hash_8c_1aad3b13daa628e3f265cf69a185faa098" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int fnv_hash_function</definition>
        <argsstring>(void *key, int len)</argsstring>
        <name>fnv_hash_function</name>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_hash.c" line="9" column="1" bodyfile="test_hash.c" bodystart="9" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="test__hash_8c_1ab514c4d15f732b0ce3fd088d1fa0cb2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int ulong_hash_function</definition>
        <argsstring>(void *key)</argsstring>
        <name>ulong_hash_function</name>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_hash.c" line="17" column="1" bodyfile="test_hash.c" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="test__hash_8c_1af105ee3929a7d0a302795a91c564f7fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ulong_key_compare</definition>
        <argsstring>(void *key1, void *key2)</argsstring>
        <name>ulong_key_compare</name>
        <param>
          <type>void *</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_hash.c" line="22" column="1" bodyfile="test_hash.c" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="test__hash_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_hash.c" line="28" column="1" bodyfile="test_hash.c" bodystart="28" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="icl__hash_8h" kindref="compound">icl_hash.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Hashing<sp/>funtions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Well<sp/>known<sp/>hash<sp/>function:<sp/>Fowler/Noll/Vo<sp/>-<sp/>32<sp/>bit<sp/>version</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fnv_hash_function(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)key;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>2166136261u;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>(<sp/>h<sp/>*<sp/>16777619<sp/>)<sp/>^<sp/>p[i];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulong_hash_function(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hashval<sp/>=<sp/>fnv_hash_function(<sp/>key,<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hashval;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulong_key_compare(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key2<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*)key1<sp/>==<sp/>*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*)key2<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structicl__hash__s" kindref="compound">icl_hash_t</ref><sp/>*hash<sp/>=<sp/><ref refid="icl__hash_8c_1a7dd8c07b7cf001deceaf83273c08cb10" kindref="member">icl_hash_create</ref>(1024,<sp/>ulong_hash_function,<sp/>ulong_key_compare);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>key1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>key2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>key3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>key4<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>key5<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a650b9755a4efce9df3093602ddb40414" kindref="member">icl_hash_insert</ref>(hash,<sp/>&amp;key1,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)key1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a650b9755a4efce9df3093602ddb40414" kindref="member">icl_hash_insert</ref>(hash,<sp/>&amp;key2,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)key2);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a650b9755a4efce9df3093602ddb40414" kindref="member">icl_hash_insert</ref>(hash,<sp/>&amp;key3,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)key3);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a650b9755a4efce9df3093602ddb40414" kindref="member">icl_hash_insert</ref>(hash,<sp/>&amp;key4,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)key4);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a650b9755a4efce9df3093602ddb40414" kindref="member">icl_hash_insert</ref>(hash,<sp/>&amp;key5,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)key5);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a9a61a09d5f70d66cc668565645aa3e88" kindref="member">icl_hash_delete</ref>(hash,<sp/>&amp;key3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a9a61a09d5f70d66cc668565645aa3e88" kindref="member">icl_hash_delete</ref>(hash,<sp/>&amp;key5,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="icl__hash_8c_1a13a0f184a9dc3dfa3a68445101370e32" kindref="member">icl_hash_find</ref>(hash,<sp/>&amp;key1)<sp/>!=<sp/>NULL)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>NON<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="icl__hash_8c_1a13a0f184a9dc3dfa3a68445101370e32" kindref="member">icl_hash_find</ref>(hash,<sp/>&amp;key2)<sp/>!=<sp/>NULL)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>NON<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="icl__hash_8c_1a13a0f184a9dc3dfa3a68445101370e32" kindref="member">icl_hash_find</ref>(hash,<sp/>&amp;key3)<sp/>!=<sp/>NULL)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key3);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>NON<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key3);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="icl__hash_8c_1a13a0f184a9dc3dfa3a68445101370e32" kindref="member">icl_hash_find</ref>(hash,<sp/>&amp;key4)<sp/>!=<sp/>NULL)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key4);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>NON<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key4);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="icl__hash_8c_1a13a0f184a9dc3dfa3a68445101370e32" kindref="member">icl_hash_find</ref>(hash,<sp/>&amp;key5)<sp/>!=<sp/>NULL)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Chiave<sp/>%ld<sp/>NON<sp/>trovata\n&quot;</highlight><highlight class="normal">,<sp/>key5);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="icl__hash_8c_1a4644f0e1c6aecfefd5ab9c378695d24a" kindref="member">icl_hash_destroy</ref>(hash,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test_hash.c"/>
  </compounddef>
</doxygen>
