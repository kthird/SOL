<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="sparse_8c">
    <title>sparse.c File Reference</title>
    <programlisting>#include &quot;sparse.h&quot;</programlisting>
    <programlisting>#include &lt;errno.h&gt;</programlisting>
    <programlisting>#include &lt;stdlib.h&gt;</programlisting>
    <programlisting>#include &lt;string.h&gt;</programlisting>
<para>Include dependency diagram for sparse.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="sparse_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for sparse.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="sparse_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Funzioni</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1a13f7785dace4a2981b9b6f810ca34115">new_smat</link> (
unsigned n, unsigned m)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="sparse_8h_1a4ed992ceefff896353c1727143529d16">bool_t</link> <link linkend="sparse_8c_1a4232552afd0fdc736d90fded1f272759">is_equal_smat</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * a, <link linkend="structsmatrix__t">smatrix_t</link> * b)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a098b33ab9b543c109d655b9afc081bb7">put_elem_row</link> (
<link linkend="sparse_8h_1a14aec81bdea9c2d34b666b7157117387">elem_t</link> ** r, int j, double d)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a19ab77e854480bb2c9e5032bc3f0ab9f">put_elem</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * m, unsigned i, unsigned j, double d)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a23f27b0ac759a8c6cf94ca624a7367d3">get_elem_row</link> (
<link linkend="sparse_8h_1a14aec81bdea9c2d34b666b7157117387">elem_t</link> * r, int j, double * pd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a03efbfc08da3aa936597103784ddbe45">get_elem</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * m, unsigned i, unsigned j, double * pd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="sparse_8c_1a58e3ead06f0ecc684dfc90538947343a">free_row</link> (
<link linkend="sparse_8h_1a14aec81bdea9c2d34b666b7157117387">elem_t</link> ** pr)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="sparse_8c_1ad3596ce2e271a24fada5c85f3b8ce0af">free_smat</link> (
<link linkend="structsmatrix__t">smatrix_t</link> ** pm)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1afa8c4ca1cb9e4e55f40dd35faa1d9f85">sum_smat</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * a, <link linkend="structsmatrix__t">smatrix_t</link> * b)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1a633a6b934732ad44f5cf73e9c55c54e9">prod_smat</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * a, <link linkend="structsmatrix__t">smatrix_t</link> * b)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1a7b9192596db334fe30a652e05ab45987">transp_smat</link> (
<link linkend="structsmatrix__t">smatrix_t</link> * a)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1ac5049cd89f46bff8cd028382edf931e6">load_smat</link> (
FILE * fd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a9ee2597119d106f30a1ba43ba3d6c642">save_smat</link> (
FILE * fd, <link linkend="structsmatrix__t">smatrix_t</link> * mat)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="structsmatrix__t">smatrix_t</link> * <link linkend="sparse_8c_1a1bb39d59a532967d5f507a19700aafb1">loadbin_smat</link> (
FILE * fd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="sparse_8c_1a8529b8bb59f8d259731ef88e5deb6d57">savebin_smat</link> (
FILE * fd, <link linkend="structsmatrix__t">smatrix_t</link> * mat)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Descrizione dettagliata</title>

<para>prototipi implementati </para>

<para><formalpara><title>Autore: </title>

<para>Francesco Lorito 464604 </para>
</formalpara>
</para>
    <para>Definition in file /home/kappa/Scrivania/SOL/SPARSE/sparse.c</para>
    </simplesect>
</section>
